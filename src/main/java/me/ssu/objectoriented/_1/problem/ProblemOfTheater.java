package me.ssu.objectoriented._1.problem;

public class ProblemOfTheater {
/* TODO 소극장의 문제점?
	1) 관람객과 판매원이 소극장의 통제를 받는다.
		1-1) 관람객의 입장
			-> 소극장이라는 제3자가 초대장을 확인한다는 명목하에 관람객의 가방을 확인한다면
			-> 허락없이 가방을 열어 돈을 빼고 티켓을 넣어준다면...
		1-2) 판매원의 입장
			-> 소극장이 판매원의 허락없이 매표소에서 티켓과 현금을 마음대로 접근할 수 있다면
			-> 티켓을 꺼내 관람객의 가방에 집어넣고 받은 돈을 매표소에 넣는다고 한다면...
			-> 판매원은 매표소 안에 가만히 앉아 티켓이 하나씩 사라지고 돈이 저절로 쌓이는 과정을 지켜봐야 한다면
	TODO 2) 해결방법?
		소극장(Theater)가 관람객(Audience)와 판매원(TickerSeller)에 관해 너무 세세한 부분까지 알지 못하도록
		정보를 차단하면 된다. 소극장의 경우 관람객이 가방을 갖고 있다는 사실과 판매원이 매표소에서 티켓을 판매하는 사실에 대해
		알 필요가 없다. 관람객이 스스로 초대장과 현금을 처리하고 판매원이 스스로 매표소의 티켓과 판매 요금을 다루게 한다면
		모든 문제를 해결할 수 있다. 결론은 "의존성을 줄여 결합도를 낮추면서 자율성을 높이자."
*/
}